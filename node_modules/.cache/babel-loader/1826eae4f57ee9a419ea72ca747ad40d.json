{"ast":null,"code":"var _jsxFileName = \"/Users/adamgif/Documents/Adam n Gif Studio/Project/Website/UT/React/eisapp/src/components/Box.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport Post from './components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Box = _ref => {\n  _s();\n\n  let {\n    position,\n    color\n  } = _ref;\n  // const { nodes, materials } = useGLTF('/cube.glb')\n  const mesh = useRef(null);\n  useFrame(() => mesh.current.rotation.x = mesh.current.rotation.y += 0.01);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: mesh,\n      position: position,\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Box, \"aboyJ/StuJfvpd16sdbtizo3yWA=\", false, function () {\n  return [useFrame];\n});\n\n_c = Box;\nexport default Box;\n\nvar _c;\n\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"names":["useRef","useFrame","Post","Box","position","color","mesh","current","rotation","x","y"],"sources":["/Users/adamgif/Documents/Adam n Gif Studio/Project/Website/UT/React/eisapp/src/components/Box.js"],"sourcesContent":["import { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport Post from './components/Post'\n\n\nconst Box = ({position, color}) => {\n    // const { nodes, materials } = useGLTF('/cube.glb')\n    const mesh = useRef(null)\n    useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01 ));\n  \n    return (\n        <>\n      <mesh ref={mesh} position={position}>\n        <boxBufferGeometry/>\n        <meshStandardMaterial  color={color}/>\n      </mesh>\n      <Post/>\n      </>\n    )\n  }\n\n  export default Box"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;;AAGA,MAAMC,GAAG,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAACC,QAAD;IAAWC;EAAX,CAAsB;EAC/B;EACA,MAAMC,IAAI,GAAGN,MAAM,CAAC,IAAD,CAAnB;EACAC,QAAQ,CAAC,MAAOK,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,GAA0BH,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBE,CAAtB,IAA2B,IAA7D,CAAR;EAEA,oBACI;IAAA,wBACF;MAAM,GAAG,EAAEJ,IAAX;MAAiB,QAAQ,EAAEF,QAA3B;MAAA,wBACE;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAuB,KAAK,EAAEC;MAA9B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADE,eAKF,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QALE;EAAA,gBADJ;AASD,CAdH;;GAAMF,G;UAGFF,Q;;;KAHEE,G;AAgBJ,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}