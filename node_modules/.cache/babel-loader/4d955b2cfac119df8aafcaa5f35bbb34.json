{"ast":null,"code":"var _jsxFileName = \"/Users/adamgif/Documents/Adam n Gif Studio/Project/Website/UT/React/eisapp/src/components/BoxMesh.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoxMesh = props => {\n  _s();\n\n  const group = useRef();\n  const {\n    nodes,\n    materials,\n    animations\n  } = useGLTF(\"/cube.glb\");\n  const {\n    actions\n  } = useAnimations(animations, group);\n  useFrame(state => {\n    const t = state.clock.getElapsedTime() + random * 10000;\n    group.current.rotation.set(Math.cos(t / 4) / 2, Math.sin(t / 4) / 2, Math.cos(t / 1.5) / 2);\n    group.current.position.y = Math.sin(t / 1.5) / 2;\n    group.current.scale.x = group.current.scale.y = group.current.scale.z = THREE.MathUtils.lerp(group.current.scale.z, hovered ? 1.4 : 1, 0.1);\n    group.current.color.lerp(color.set(hovered ? 'darkorange' : 'white'), hovered ? 2.5 : 0.6);\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    ...props,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      name: \"Scene\",\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: \"cubeMetal\",\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes.cubeMetal.geometry,\n        material: materials.HardShell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BoxMesh, \"oIMhWay03GKcAi+PAMYXJQTkews=\", false, function () {\n  return [useGLTF, useAnimations, useFrame];\n});\n\n_c = BoxMesh;\nexport default BoxMesh;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxMesh\");","map":{"version":3,"names":["React","useRef","useFrame","useGLTF","useAnimations","BoxMesh","props","group","nodes","materials","animations","actions","state","t","clock","getElapsedTime","random","current","rotation","set","Math","cos","sin","position","y","scale","x","z","THREE","MathUtils","lerp","hovered","color","cubeMetal","geometry","HardShell"],"sources":["/Users/adamgif/Documents/Adam n Gif Studio/Project/Website/UT/React/eisapp/src/components/BoxMesh.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\n\nconst BoxMesh = (props) => {\n  const group = useRef();\n  const { nodes, materials, animations } = useGLTF(\"/cube.glb\");\n  const { actions } = useAnimations(animations, group);\n\n  useFrame((state) => {\n    const t = state.clock.getElapsedTime() + random * 10000\n    group.current.rotation.set(Math.cos(t / 4) / 2, Math.sin(t / 4) / 2, Math.cos(t / 1.5) / 2)\n    group.current.position.y = Math.sin(t / 1.5) / 2\n    group.current.scale.x = group.current.scale.y = group.current.scale.z = THREE.MathUtils.lerp(group.current.scale.z, hovered ? 1.4 : 1, 0.1)\n    group.current.color.lerp(color.set(hovered ? 'darkorange' : 'white'), hovered ? 2.5 : 0.6)\n  })\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group name=\"Scene\">\n        <mesh\n          name=\"cubeMetal\"\n          castShadow\n          receiveShadow\n          geometry={nodes.cubeMetal.geometry}\n          material={materials.HardShell}\n        />\n      </group>\n    </group>\n  );\n}\n\nexport default BoxMesh"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,mBAAvC;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAMC,KAAK,GAAGN,MAAM,EAApB;EACA,MAAM;IAAEO,KAAF;IAASC,SAAT;IAAoBC;EAApB,IAAmCP,OAAO,CAAC,WAAD,CAAhD;EACA,MAAM;IAAEQ;EAAF,IAAcP,aAAa,CAACM,UAAD,EAAaH,KAAb,CAAjC;EAEAL,QAAQ,CAAEU,KAAD,IAAW;IAClB,MAAMC,CAAC,GAAGD,KAAK,CAACE,KAAN,CAAYC,cAAZ,KAA+BC,MAAM,GAAG,KAAlD;IACAT,KAAK,CAACU,OAAN,CAAcC,QAAd,CAAuBC,GAAvB,CAA2BC,IAAI,CAACC,GAAL,CAASR,CAAC,GAAG,CAAb,IAAkB,CAA7C,EAAgDO,IAAI,CAACE,GAAL,CAAST,CAAC,GAAG,CAAb,IAAkB,CAAlE,EAAqEO,IAAI,CAACC,GAAL,CAASR,CAAC,GAAG,GAAb,IAAoB,CAAzF;IACAN,KAAK,CAACU,OAAN,CAAcM,QAAd,CAAuBC,CAAvB,GAA2BJ,IAAI,CAACE,GAAL,CAAST,CAAC,GAAG,GAAb,IAAoB,CAA/C;IACAN,KAAK,CAACU,OAAN,CAAcQ,KAAd,CAAoBC,CAApB,GAAwBnB,KAAK,CAACU,OAAN,CAAcQ,KAAd,CAAoBD,CAApB,GAAwBjB,KAAK,CAACU,OAAN,CAAcQ,KAAd,CAAoBE,CAApB,GAAwBC,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBvB,KAAK,CAACU,OAAN,CAAcQ,KAAd,CAAoBE,CAAzC,EAA4CI,OAAO,GAAG,GAAH,GAAS,CAA5D,EAA+D,GAA/D,CAAxE;IACAxB,KAAK,CAACU,OAAN,CAAce,KAAd,CAAoBF,IAApB,CAAyBE,KAAK,CAACb,GAAN,CAAUY,OAAO,GAAG,YAAH,GAAkB,OAAnC,CAAzB,EAAsEA,OAAO,GAAG,GAAH,GAAS,GAAtF;EACD,CANO,CAAR;EAQA,oBACE;IAAO,GAAG,EAAExB,KAAZ;IAAA,GAAuBD,KAAvB;IAA8B,OAAO,EAAE,IAAvC;IAAA,uBACE;MAAO,IAAI,EAAC,OAAZ;MAAA,uBACE;QACE,IAAI,EAAC,WADP;QAEE,UAAU,MAFZ;QAGE,aAAa,MAHf;QAIE,QAAQ,EAAEE,KAAK,CAACyB,SAAN,CAAgBC,QAJ5B;QAKE,QAAQ,EAAEzB,SAAS,CAAC0B;MALtB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA1BD;;GAAM9B,O;UAEqCF,O,EACrBC,a,EAEpBF,Q;;;KALIG,O;AA4BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}