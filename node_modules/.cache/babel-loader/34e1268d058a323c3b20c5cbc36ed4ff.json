{"ast":null,"code":"var _jsxFileName = \"/Users/adamgif/Documents/Adam n Gif Studio/Project/Website/UT/React/eisapp/src/components/BoxMesh.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BoxMesh(props) {\n  _s();\n\n  const group = useRef();\n  const {\n    nodes,\n    materials,\n    animations\n  } = useGLTF(\"/cube.glb\");\n  const {\n    actions\n  } = useAnimations(animations, group);\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    ...props,\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      name: \"Scene\",\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        name: \"cubeMetal\",\n        castShadow: true,\n        receiveShadow: true,\n        geometry: nodes.cubeMetal.geometry,\n        material: materials.HardShell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BoxMesh, \"/EIEKsmHnVXirmqACurk1DnFi7s=\", false, function () {\n  return [useGLTF, useAnimations];\n});\n\n_c = BoxMesh;\nuseGLTF.preload(\"/cube.glb\");\nexport default BoxMesh;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoxMesh\");","map":{"version":3,"names":["React","useRef","useGLTF","useAnimations","BoxMesh","props","group","nodes","materials","animations","actions","cubeMetal","geometry","HardShell","preload"],"sources":["/Users/adamgif/Documents/Adam n Gif Studio/Project/Website/UT/React/eisapp/src/components/BoxMesh.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\n\nexport function BoxMesh(props) {\n  const group = useRef();\n  const { nodes, materials, animations } = useGLTF(\"/cube.glb\");\n  const { actions } = useAnimations(animations, group);\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group name=\"Scene\">\n        <mesh\n          name=\"cubeMetal\"\n          castShadow\n          receiveShadow\n          geometry={nodes.cubeMetal.geometry}\n          material={materials.HardShell}\n        />\n      </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/cube.glb\");\n\nexport default BoxMesh"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,mBAAvC;;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAAA;;EAC7B,MAAMC,KAAK,GAAGL,MAAM,EAApB;EACA,MAAM;IAAEM,KAAF;IAASC,SAAT;IAAoBC;EAApB,IAAmCP,OAAO,CAAC,WAAD,CAAhD;EACA,MAAM;IAAEQ;EAAF,IAAcP,aAAa,CAACM,UAAD,EAAaH,KAAb,CAAjC;EACA,oBACE;IAAO,GAAG,EAAEA,KAAZ;IAAA,GAAuBD,KAAvB;IAA8B,OAAO,EAAE,IAAvC;IAAA,uBACE;MAAO,IAAI,EAAC,OAAZ;MAAA,uBACE;QACE,IAAI,EAAC,WADP;QAEE,UAAU,MAFZ;QAGE,aAAa,MAHf;QAIE,QAAQ,EAAEE,KAAK,CAACI,SAAN,CAAgBC,QAJ5B;QAKE,QAAQ,EAAEJ,SAAS,CAACK;MALtB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAjBeT,O;UAE2BF,O,EACrBC,a;;;KAHNC,O;AAmBhBF,OAAO,CAACY,OAAR,CAAgB,WAAhB;AAEA,eAAeV,OAAf"},"metadata":{},"sourceType":"module"}