{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useState, createElement } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport { MeshPhysicalMaterial } from 'three';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport distort from './helpers/glsl/distort.vert.glsl.js';\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor() {\n    let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(parameters);\n\n    _defineProperty(this, \"_time\", void 0);\n\n    _defineProperty(this, \"_distort\", void 0);\n\n    _defineProperty(this, \"_radius\", void 0);\n\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = \"\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      \" + distort + \"\\n      \" + shader.vertexShader + \"\\n    \";\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \");\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get distort() {\n    return this._distort.value;\n  }\n\n  set distort(v) {\n    this._distort.value = v;\n  }\n\n  get radius() {\n    return this._radius.value;\n  }\n\n  set radius(v) {\n    this._radius.value = v;\n  }\n\n}\n\nconst MeshDistortMaterial = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    speed = 1\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"speed\"]);\n\n  const [material] = useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { MeshDistortMaterial };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","forwardRef","useState","createElement","useFrame","MeshPhysicalMaterial","_defineProperty","distort","DistortMaterialImpl","constructor","parameters","setValues","_time","value","_distort","_radius","onBeforeCompile","shader","uniforms","time","radius","vertexShader","replace","v","MeshDistortMaterial","_ref","ref","speed","props","material","state","clock","getElapsedTime","dispose","undefined","object","attach"],"sources":["/Users/adamgif/Documents/Adam n Gif Studio/Project/Website/UT/React/eisapp/node_modules/drei/MeshDistortMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useState, createElement } from 'react';\nimport { useFrame } from 'react-three-fiber';\nimport { MeshPhysicalMaterial } from 'three';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport distort from './helpers/glsl/distort.vert.glsl.js';\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n\n    _defineProperty(this, \"_time\", void 0);\n\n    _defineProperty(this, \"_distort\", void 0);\n\n    _defineProperty(this, \"_radius\", void 0);\n\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = \"\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      \" + distort + \"\\n      \" + shader.vertexShader + \"\\n    \";\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \");\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get distort() {\n    return this._distort.value;\n  }\n\n  set distort(v) {\n    this._distort.value = v;\n  }\n\n  get radius() {\n    return this._radius.value;\n  }\n\n  set radius(v) {\n    this._radius.value = v;\n  }\n\n}\n\nconst MeshDistortMaterial = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    speed = 1\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"speed\"]);\n\n  const [material] = useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshDistortMaterial };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}